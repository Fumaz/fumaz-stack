// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  PENDING_EMAIL_VERIFICATION
  ACTIVE
  SUSPENDED
  DELETED
}

model User {
  id        Int        @id @default(autoincrement())
  uuid      String     @unique @default(uuid())
  email     String     @unique
  firstName String
  lastName  String?
  password  String?
  language  String     @default("en")
  status    UserStatus @default(PENDING_EMAIL_VERIFICATION)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  authAccounts AuthAccount[]
  sessions     Session[]
}

model AuthAccount {
  id           Int      @id @default(autoincrement())
  uuid         String   @unique @default(uuid()) @db.Uuid
  provider     String
  providerId   String
  accessToken  String?
  refreshToken String?
  userId       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerId])
}

model Session {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique @default(uuid()) @db.Uuid
  userId      Int
  accessToken String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
